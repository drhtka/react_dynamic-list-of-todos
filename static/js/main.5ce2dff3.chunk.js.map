{"version":3,"sources":["types/Status.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodoList","_ref","todos","selectedTodo","setSelectedTodo","updatedTodos","filter","query","todo","lowerCaseTitle","title","toLowerCase","isActiveAndCompleted","Active","completed","isCompletedAndNotCompleted","Completed","includes","filterTodos","_jsxs","className","children","_jsx","map","currentTodo","todoIsSelect","id","classNames","type","onClick","TodoFilter","setFilter","setQuery","onChange","event","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","close","_useState","useState","_useState2","_slicedToArray","user","setUser","useEffect","userId","concat","href","email","name","App","setTodos","_useState3","_useState4","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","errorMessage","setErrorMessage","_useState9","_useState10","_useState11","_useState12","catch","finally","_Fragment","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ce2dff3.chunk.js","sourcesContent":["export enum Status {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { Status } from '../../types/Status';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  setSelectedTodo: (value: Todo) => void;\n  filter: string,\n  query: string,\n};\n\nfunction filterTodos(\n  todos: Todo[],\n  filter: string,\n  query: string,\n): Todo[] {\n  return todos.filter(todo => {\n    const lowerCaseTitle = todo.title.toLowerCase();\n\n    const isActiveAndCompleted = filter === Status.Active\n      && todo.completed;\n    const isCompletedAndNotCompleted = filter === Status.Completed\n      && !todo.completed;\n\n    if (isActiveAndCompleted || isCompletedAndNotCompleted) {\n      return false;\n    }\n\n    return !(query\n    && !lowerCaseTitle.includes(query.toLowerCase()));\n  });\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos, selectedTodo, setSelectedTodo, filter, query,\n}) => {\n  const updatedTodos = filterTodos(todos, filter, query);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {updatedTodos.map(currentTodo => {\n          const todoIsSelect = currentTodo.id === selectedTodo?.id;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              key={currentTodo.id}\n              className={classNames({\n                'has-background-info-light':\n                todoIsSelect,\n              })}\n            >\n              <td className=\"is-vcentered\">{currentTodo.id}</td>\n              {currentTodo.completed ? (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              ) : (\n                <td className=\"is-vcentered\" />\n              )}\n              <td className=\"is-vcentered\">\n                <p\n                  className={currentTodo.completed\n                    ? 'has-text-success'\n                    : 'has-text-danger'}\n                >\n                  {currentTodo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setSelectedTodo(currentTodo)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames({\n                      'far fa-eye-slash': todoIsSelect,\n                      'far fa-eye': !todoIsSelect,\n                    })}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  query: string;\n  setFilter: (filter: string) => void;\n  setQuery: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilter, setQuery, query,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            title=\"Select your option\"\n            onChange={(event) => setFilter(event.target.value)}\n          >\n            <option value=\"all\">\n              All\n            </option>\n            <option value=\"active\">\n              Active\n            </option>\n            <option value=\"completed\">\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"\n        control\n        is-expanded\n        has-icons-left\n        has-icons-right\"\n      >\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span\n          className=\"icon is-right\"\n          style={{ pointerEvents: 'all' }}\n        >\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodo: Todo;\n  close: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, close }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId).then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={close}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {selectedTodo.completed ? (\n                <strong className=\"has-text-danger\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [filter, setFilter] = useState('all');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then(setTodos)\n      .catch(() => setErrorMessage('Todo not found'))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                setFilter={setFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              {!isLoading && todos.length > 0 ? (\n                <TodoList\n                  todos={todos}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={setSelectedTodo}\n                  filter={filter}\n                  query={query}\n                />\n              ) : (\n                <p>{errorMessage}</p>\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          close={() => setSelectedTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}